/* 
 * Reepay API
 *
 * REST API to manage Reepay resources
 *
 * OpenAPI spec version: 1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CustomerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CustomerApiTests
    {
        private CustomerApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CustomerApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CustomerApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CustomerApi
            //Assert.IsInstanceOfType(typeof(CustomerApi), instance, "instance is a CustomerApi");
        }

        
        /// <summary>
        /// Test ActivatePaymentMethod
        /// </summary>
        [Test]
        public void ActivatePaymentMethodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string handle = null;
            //string methodId = null;
            //var response = instance.ActivatePaymentMethod(handle, methodId);
            //Assert.IsInstanceOf<PaymentMethods> (response, "response is PaymentMethods");
        }
        
        /// <summary>
        /// Test AddCardJson
        /// </summary>
        [Test]
        public void AddCardJsonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string handle = null;
            //CardToken body = null;
            //var response = instance.AddCardJson(handle, body);
            //Assert.IsInstanceOf<Card> (response, "response is Card");
        }
        
        /// <summary>
        /// Test CreateCustomerInvoice
        /// </summary>
        [Test]
        public void CreateCustomerInvoiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string handle = null;
            //CreateCustomerInvoice body = null;
            //var response = instance.CreateCustomerInvoice(handle, body);
            //Assert.IsInstanceOf<Invoice> (response, "response is Invoice");
        }
        
        /// <summary>
        /// Test CreateCustomerJson
        /// </summary>
        [Test]
        public void CreateCustomerJsonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateCustomer body = null;
            //var response = instance.CreateCustomerJson(body);
            //Assert.IsInstanceOf<Customer> (response, "response is Customer");
        }
        
        /// <summary>
        /// Test CreateCustomerNoteJson
        /// </summary>
        [Test]
        public void CreateCustomerNoteJsonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string handle = null;
            //CreateCustomerNote body = null;
            //var response = instance.CreateCustomerNoteJson(handle, body);
            //Assert.IsInstanceOf<CustomerNote> (response, "response is CustomerNote");
        }
        
        /// <summary>
        /// Test DeleteCustomer
        /// </summary>
        [Test]
        public void DeleteCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string handle = null;
            //var response = instance.DeleteCustomer(handle);
            //Assert.IsInstanceOf<Customer> (response, "response is Customer");
        }
        
        /// <summary>
        /// Test GetCard
        /// </summary>
        [Test]
        public void GetCardTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string handle = null;
            //string id = null;
            //var response = instance.GetCard(handle, id);
            //Assert.IsInstanceOf<Card> (response, "response is Card");
        }
        
        /// <summary>
        /// Test GetCardDetails
        /// </summary>
        [Test]
        public void GetCardDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string handle = null;
            //string id = null;
            //var response = instance.GetCardDetails(handle, id);
            //Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test GetCustomer
        /// </summary>
        [Test]
        public void GetCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string handle = null;
            //var response = instance.GetCustomer(handle);
            //Assert.IsInstanceOf<Customer> (response, "response is Customer");
        }
        
        /// <summary>
        /// Test GetCustomerNotes
        /// </summary>
        [Test]
        public void GetCustomerNotesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string handle = null;
            //var response = instance.GetCustomerNotes(handle);
            //Assert.IsInstanceOf<List<CustomerNote>> (response, "response is List<CustomerNote>");
        }
        
        /// <summary>
        /// Test GetCustomerPaymentMethods
        /// </summary>
        [Test]
        public void GetCustomerPaymentMethodsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string handle = null;
            //var response = instance.GetCustomerPaymentMethods(handle);
            //Assert.IsInstanceOf<PaymentMethods> (response, "response is PaymentMethods");
        }
        
        /// <summary>
        /// Test GetCustomers
        /// </summary>
        [Test]
        public void GetCustomersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? size = null;
            //string search = null;
            //string sort = null;
            //var response = instance.GetCustomers(page, size, search, sort);
            //Assert.IsInstanceOf<CustomerSearch> (response, "response is CustomerSearch");
        }
        
        /// <summary>
        /// Test ImportCardJson
        /// </summary>
        [Test]
        public void ImportCardJsonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string handle = null;
            //CardImport body = null;
            //var response = instance.ImportCardJson(handle, body);
            //Assert.IsInstanceOf<Card> (response, "response is Card");
        }
        
        /// <summary>
        /// Test InactivatePaymentMethod
        /// </summary>
        [Test]
        public void InactivatePaymentMethodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string handle = null;
            //string methodId = null;
            //var response = instance.InactivatePaymentMethod(handle, methodId);
            //Assert.IsInstanceOf<PaymentMethods> (response, "response is PaymentMethods");
        }
        
        /// <summary>
        /// Test UpdateCustomerJson
        /// </summary>
        [Test]
        public void UpdateCustomerJsonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string handle = null;
            //UpdateCustomer body = null;
            //var response = instance.UpdateCustomerJson(handle, body);
            //Assert.IsInstanceOf<Customer> (response, "response is Customer");
        }
        
    }

}
